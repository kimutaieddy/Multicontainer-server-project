name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install and Test Server
        run: |
          cd server
          npm install
          npm test

      - name: Install and Test Worker
        run: |
          cd worker
          npm install
          npm test

      - name: Install, Test, and Build Client
        run: |
          cd client
          npm install
          npm test
          npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: kimutaieddy
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Images
        run: |
          docker build -t kimutaieddy/server:latest -f ./server/Dockerfile ./server
          docker build -t kimutaieddy/nginx:latest -f ./nginx/Dockerfile ./nginx
          docker build -t kimutaieddy/worker:latest -f ./worker/Dockerfile ./worker
          docker build -t kimutaieddy/client:latest -f ./client/Dockerfile ./client
          docker push kimutaieddy/server:latest
          docker push kimutaieddy/nginx:latest
          docker push kimutaieddy/worker:latest
          docker push kimutaieddy/client:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: npm install
        working-directory: client

      - name: Deploy to Elastic Beanstalk
        env:
          EB_ENV: Multicontainer-env
          S3_BUCKET: elasticbeanstalk-us-east-1-891376912432
        run: |
          npm run build
          zip -r deploy.zip .
          aws s3 cp deploy.zip s3://$S3_BUCKET/deploy.zip
          aws elasticbeanstalk create-application-version --application-name $EB_ENV --version-label v1 --source-bundle S3Bucket=$S3_BUCKET,S3Key=deploy.zip
          aws elasticbeanstalk update-environment --environment-name $EB_ENV --version-label v1
